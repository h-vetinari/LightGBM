name: CUDA GitHub Actions

on:
  push:
    branches:
    - test_cuda

jobs:
  test:
    name: CUDA
    runs-on: [self-hosted, linux]
    timeout-minutes: 60
    steps:
      - name: Setup or update software on host machine
        run: |
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y \
                apt-transport-https \
                ca-certificates \
                curl \
                git \
                gnupg-agent \
                software-properties-common \
                wget
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y
            curl -sL https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
            curl -sL https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y \
                containerd.io \
                docker-ce \
                docker-ce-cli \
                nvidia-docker2
            sudo systemctl restart docker
      - name: Remove old folder with repository
        run: sudo rm -rf $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 30
          submodules: true
          ref: 5eee55cc3e5a531e24530cbcd4f027a4b44ebcdd
      - name: Test CUDA
        run: |
            export ROOT_DOCKER_FOLDER=/LightGBM
            cat > docker-script.sh <<EOF
            nvidia-smi
            apt-get update
            apt-get install --no-install-recommends -y curl
            curl -sL https://cmake.org/files/v3.19/cmake-3.19.2-Linux-x86_64.sh -o cmake.sh
            chmod +x cmake.sh
            ./cmake.sh --prefix=/usr/local --exclude-subdir
            sed -i'.bak' 's/std::string device_type = "cpu";/std::string device_type = "cuda";/' /LightGBM/include/LightGBM/config.h
            grep -q 'std::string device_type = "cuda"' /LightGBM/include/LightGBM/config.h || exit -1  # make sure that changes were really done
            echo "Check sum of cuda_tree_learner.cpp"
            sum /LightGBM/src/treelearner/cuda_tree_learner.cpp
            mkdir /LightGBM/build && cd /LightGBM/build
            cmake -DUSE_CUDA=ON ..
            make lightgbm -j4 || exit -1
            cd ../examples/regression
            ../../lightgbm config=train.conf
            EOF
            sudo docker run -v "./":"/LightGBM" --rm --gpus all nvidia/cuda:11.0-devel-ubuntu20.04 /bin/bash /LightGBM/docker-script.sh
